global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    platform: 'voxar-platform'
    environment: '${ENVIRONMENT:-development}'

# Rule files for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alerting configuration  
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s

  # VOXAR Core Services
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['gateway:8000']
    metrics_path: /metrics
    scrape_interval: 10s
    scrape_timeout: 5s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'api-gateway'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'high-performance'

  - job_name: 'localization-service'
    static_configs:
      - targets: ['localization:8080']
    metrics_path: /metrics
    scrape_interval: 5s  # Critical 60fps service - high frequency scraping
    scrape_timeout: 3s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'localization'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'critical-60fps'

  - job_name: 'vps-engine'
    static_configs:
      - targets: ['vps-engine:9000']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 5s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'vps-engine'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'high-performance'

  - job_name: 'cloud-anchors'
    static_configs:
      - targets: ['cloud-anchor-service:9001']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 5s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'cloud-anchors'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'standard'

  - job_name: 'mapping-processor'
    static_configs:
      - targets: ['mapping-processor:8080']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'mapping-processor'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'background'

  # Nakama Game Server Metrics
  - job_name: 'nakama'
    static_configs:
      - targets: ['nakama:9100']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'nakama-multiplayer'
      - source_labels: [__address__]
        target_label: tier
        replacement: 'high-performance'

  # Infrastructure Services
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgresql'
      - source_labels: [__address__]
        target_label: component
        replacement: 'database'

  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 15s
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'
      - source_labels: [__address__]
        target_label: component
        replacement: 'cache'

  # OpenTelemetry Collector Metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'otel-collector'
      - source_labels: [__address__]
        target_label: component
        replacement: 'observability'

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'grafana'
      - source_labels: [__address__]
        target_label: component
        replacement: 'visualization'

  # Container Runtime Metrics (if available)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'cadvisor'
      - source_labels: [__address__]
        target_label: component
        replacement: 'container-metrics'
